apiVersion: v1
data:
  index.js: |
    var http = require("http");

    var port = process.argv[2];

    //create a server object:
    http
      .createServer(function (req, res) {
        res.write("Hello From cdk8s-plus!"); //write a response to the client
        res.end(); //end the response
      })
      .listen(port); //the server object listens on port 80
kind: ConfigMap
metadata:
  name: cdk8s-plus-appdata-configmap-8df275b4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdk8s-plus-deployment-pod-aeb504c6
spec:
  replicas: 3
  selector:
    matchLabels:
      cdk8s.deployment: cdk8splusDeployment5EB702BE
  template:
    metadata:
      labels:
        cdk8s.deployment: cdk8splusDeployment5EB702BE
    spec:
      containers:
        - command:
            - node
            - index.js
            - "80"
          env: []
          image: node:14.4.0-alpine3.12
          name: main
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /var/lib/app
              name: configmap-cdk8s-plus-appdata-configmap-8df275b4
          workingDir: /var/lib/app
      volumes:
        - configMap:
            name: cdk8s-plus-appdata-configmap-8df275b4
          name: configmap-cdk8s-plus-appdata-configmap-8df275b4
---
apiVersion: v1
kind: Service
metadata:
  name: cdk8s-plus-deployment-service-pod-923c770b
spec:
  externalIPs: []
  ports:
    - port: 8080
      targetPort: 80
  selector:
    cdk8s.deployment: cdk8splusDeployment5EB702BE
  type: LoadBalancer
