// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * 
 *
 * @schema RbacConfig
 */
export class RbacConfig extends ApiObject {
  /**
   * Defines a "RbacConfig" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: RbacConfigOptions = {}) {
    super(scope, name, {
      ...options,
      kind: 'RbacConfig',
      apiVersion: 'rbac.istio.io/v1alpha1',
    });
  }
}

/**
 * @schema RbacConfig
 */
export interface RbacConfigOptions {
  /**
   * Configuration for Role Based Access Control. See more details at: https://istio.io/docs/reference/config/security/istio.rbac.v1alpha1.html
   *
   * @schema RbacConfig#spec
   */
  readonly spec?: RbacConfigSpec;

}

/**
 * Configuration for Role Based Access Control. See more details at: https://istio.io/docs/reference/config/security/istio.rbac.v1alpha1.html
 *
 * @schema RbacConfigSpec
 */
export interface RbacConfigSpec {
  /**
   * @schema RbacConfigSpec#enforcementMode
   */
  readonly enforcementMode?: RbacConfigSpecEnforcementMode;

  /**
   * A list of services or namespaces that should not be enforced by Istio RBAC policies.
   *
   * @schema RbacConfigSpec#exclusion
   */
  readonly exclusion?: RbacConfigSpecExclusion;

  /**
   * A list of services or namespaces that should be enforced by Istio RBAC policies.
   *
   * @schema RbacConfigSpec#inclusion
   */
  readonly inclusion?: RbacConfigSpecInclusion;

  /**
   * Istio RBAC mode.
   *
   * @schema RbacConfigSpec#mode
   */
  readonly mode?: RbacConfigSpecMode;

}

/**
 * @schema RbacConfigSpecEnforcementMode
 */
export enum RbacConfigSpecEnforcementMode {
  /** ENFORCED */
  ENFORCED = "ENFORCED",
  /** PERMISSIVE */
  PERMISSIVE = "PERMISSIVE",
}

/**
 * A list of services or namespaces that should not be enforced by Istio RBAC policies.
 *
 * @schema RbacConfigSpecExclusion
 */
export interface RbacConfigSpecExclusion {
  /**
   * A list of namespaces.
   *
   * @schema RbacConfigSpecExclusion#namespaces
   */
  readonly namespaces?: string[];

  /**
   * A list of services.
   *
   * @schema RbacConfigSpecExclusion#services
   */
  readonly services?: string[];

}

/**
 * A list of services or namespaces that should be enforced by Istio RBAC policies.
 *
 * @schema RbacConfigSpecInclusion
 */
export interface RbacConfigSpecInclusion {
  /**
   * A list of namespaces.
   *
   * @schema RbacConfigSpecInclusion#namespaces
   */
  readonly namespaces?: string[];

  /**
   * A list of services.
   *
   * @schema RbacConfigSpecInclusion#services
   */
  readonly services?: string[];

}

/**
 * Istio RBAC mode.
 *
 * @schema RbacConfigSpecMode
 */
export enum RbacConfigSpecMode {
  /** OFF */
  OFF = "OFF",
  /** ON */
  ON = "ON",
  /** ON_WITH_INCLUSION */
  ON_WITH_INCLUSION = "ON_WITH_INCLUSION",
  /** ON_WITH_EXCLUSION */
  ON_WITH_EXCLUSION = "ON_WITH_EXCLUSION",
}

