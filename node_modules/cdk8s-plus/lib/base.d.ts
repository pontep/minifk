import { Construct } from 'constructs';
import * as cdk8s from 'cdk8s';
/**
 * Initialization properties for resources.
 */
export interface ResourceProps {
    /**
     * Metadata that all persisted resources must have, which includes all objects
     * users must create.
     */
    readonly metadata?: cdk8s.ApiObjectMetadata;
}
/**
 * Represents a resource.
 */
export interface IResource {
    /**
     * The Kubernetes name of this resource.
     */
    readonly name: string;
}
/**
 * Base class for all Kubernetes objects in stdk8s. Represents a single
 * resource.
 */
export declare abstract class Resource extends Construct implements IResource {
    constructor(scope: Construct, id: string, _: ResourceProps);
    /**
     * The underlying cdk8s API object.
     */
    protected abstract readonly apiObject: cdk8s.ApiObject;
    get metadata(): cdk8s.ApiObjectMetadataDefinition;
    /**
     * The name of this API object.
     */
    get name(): string;
}
